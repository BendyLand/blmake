-- Config file generated by blmake!
-- All tables accept string values. Leave empty if unused.
-- `debugging` expects a boolean value.
-- Everything else expects a string value. Use "" if unused.

Full_build = {
    compiler = "",        -- The compiler to be used (e.g., "gcc", "clang")
    files = {},           -- A list of source files to compile (e.g., "main.cpp", "utils.cpp")
    include_dirs = {},    -- Directories for include files 
    preproc_opts = {},    -- Preprocessor options (e.g., macros, include paths)
    linker_opts = {},     -- Linker options (e.g., "m" for the math lib)
    output = "",          -- Output file name (optional, defaults to a.out)
    optimization = "",    -- Optimization level (e.g., "-O2", "-Os")
    debugging = true,     -- A BOOLEAN value indicating whether to include debug info ("-g")
    warnings = {},        -- Warning levels and options (e.g., "all", "error")
    platform_opts = {},   -- Platform-specific options (e.g., architecture flags)
    profiling = "",       -- Profiling options (e.g., "-pg")
    lto = "",             -- Link-time optimization (e.g., "-flto")
    lang_exts = {},       -- Language standard and extensions (e.g., "-std=c11", "-fno-exceptions")
    dependencies = {},    -- libraries to link against, e.g. {"lib1", "lib2"}
    post_build = {},      -- e.g., {"run_tests", "deploy"}
    build_type = "",      -- or "Release"
    env_vars = {},        -- e.g., {CC = "gcc", CXX = "g++"}
    src_dir = "",         -- Source directory
    out_dir = "",         -- Output directory
    hooks = {},           -- e.g., {pre_build = "scripts/pre_build.sh"} 
    custom_flags = {},    -- e.g., {"-fno-stack-protector"}
    tests = {},           -- e.g., {"test_suite1", "test_suite2"}
    documentation = "",   -- Directory or command for generating docs
    project_metadata = {  -- Optional: project name, version, author
        name = "",
        version = "",
        author = "",
    }
}

Build = {
    compiler = "",      -- e.g., "g++"
    files = {},         -- e.g., {"main.cpp", "utils.cpp"}
    lang_exts = {},     -- e.g., {"-std=c++20"}
    include_dirs = {},  -- Directories for include files (optional)
    dependencies = {},  -- Preprocessor options (e.g., macros, include paths)
    preproc_opts = {},  -- Preprocessor options (e.g., macros, include paths)
    linker_opts = {},   -- Linker options (e.g., "m" for the math lib)
    optimization = "",  -- Optimization level (e.g., "-O2", "-Os")
    debugging = true,   -- A BOOLEAN value indicating whether to include debugging info ("-g")
    build_type = "",    -- e.g., or "Release"
    output = "",        -- e.g., "myprogram"
    src_dir = "",       -- Source directory
    out_dir = "",       -- Output directory
}

Simple_build = {
    compiler = "",      -- e.g., "gcc"
    files = {},         -- e.g., {"main.c", "utils.c"}
    lang_exts = {},     -- e.g., {"-std=c++20"}
    include_dirs = {},  -- e.g., {"include/"}
    dependencies = {},  -- e.g., {"include/"}
    output = "",        -- e.g., "myprogram"
    debugging = true,   -- e.g., "-g"
}

Tiny_build = {
    compiler = "",  -- e.g., "gcc"
    files = {},     -- e.g., {"main.c", "utils.c"}
    output = "",    -- e.g., "myprogram"
}

Test_build = {
    compiler = "",      -- e.g., "g++"
    files = {},         -- e.g., {"main.cpp", "utils.cpp"}
    lang_exts = {},     -- e.g., {"-std=c++20"}
    include_dirs = {},  -- Directories for include files (optional)
    dependencies = {},  -- libraries to link against (e.g., "m" for the math lib)
    preproc_opts = {},  -- Preprocessor options (e.g., macros, include paths)
    linker_opts = {},   -- Linker options (e.g., libraries, library paths)
    optimization = "",  -- Optimization level (e.g., "-O2", "-Os")
    warnings = {},      -- Warning levels and options (e.g., "-Wall", "-Werror")
    profiling = "",     -- Profiling options (e.g., "-pg")
    debugging = true,   -- Will add "-g" if true.
    output = "",        -- e.g., "myprogram"
    src_dir = "",       -- Source directory
    out_dir = "",       -- Output directory
    tests = {},         -- e.g., {"test_suite1", "test_suite2"}
    post_build = {},    -- e.g., {"run_tests", "deploy"}
    hooks = {}          -- e.g., {pre_build = "scripts/pre_build.sh", post_build = "scripts/post_build.sh"} 
}

-- Customize behavior below!
-- For example:
--[[
if Full_build.build_type == "Debug" then
    Full_build.optimization = "-O0"
end
]]

