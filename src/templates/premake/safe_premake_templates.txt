-- Full_build
workspace "BendyLand" -- project_metadata.name else Full_build (table name)
   configurations { "Debug", "Release" } -- constant?
   location "custom_example/build" -- out_dir

project "BendyLand" -- workspace?
   kind "ConsoleApp" -- constant?
   language "C++" -- infer from compiler
   targetdir "custom_example/build" -- out_dir
   objdir "custom_example/build/obj" -- out_dir + "/obj"?

   -- Compiler and files
   files { "custom_example/main.cpp", "custom_example/utils.cpp" } -- src_dir + files
   includedirs { "custom_example/include" } -- include_dirs

   -- Preprocessor options
   defines { "DEBUG" } -- preproc_opts

   -- Language standard
   cppdialect "C++20" -- lang_exts if -std=c++XX

   -- Build options
   filter "configurations:Debug" 
      defines { "DEBUG" } 
      symbols "On"
      optimize "Off"

   filter "configurations:Release"
      defines { "NDEBUG" }
      symbols "Off"
      optimize "Full"
      flags { "LinkTimeOptimization" } -- lto

   -- Warnings and flags
   buildoptions {
      "-Wall", "-Werror", "-pg", "-flto", "-std=c++20"
   } -- warnings, profiling, lto, lang_exts

   -- Linker options
   libdirs { "custom_example/libs" } -- linker_opts
   links { "m", "pthread" } -- dependencies

   -- Custom scripts/hooks
   prebuildcommands { 
      "custom_example/scripts/pre_build.sh"
   } -- hooks.pre_build

   postbuildcommands {
      "custom_example/scripts/post_build.sh"
   } -- hooks.post_build
   
   -- Additional flags
   buildoptions { "-fno-stack-protector" } -- custom_flags

-- Build
workspace "Build" 
   configurations { "Debug", "Release" } -- constants
   location "build_example/build" -- out_dir

project "Build" -- workspace
   kind "ConsoleApp" -- constant
   language "C++" -- infer from compiler
   targetdir "build_example/build" -- out_dir
   objdir "build_example/build/obj" -- out_dir + "/obj"

   files { "build_example/main.cpp", "build_example/utils.cpp" } -- src_dir + files
   includedirs { "build_example/include" } -- include_dirs

   -- Preprocessor and linker options
   defines { "BUILD_MODE" } -- preproc_opts
   links { "m", "pthread" } -- dependencies

   -- Optimization and debug info
   filter "configurations:Debug"
      defines { "DEBUG" }
      symbols "On"
      optimize "Off"

   filter "configurations:Release"
      defines { "NDEBUG" }
      optimize "Full"
      symbols "Off"

-- Simple_build
workspace "SimpleBuild"
   configurations { "Default" }
   location "simple_build_example/build"

project "SimpleBuild"
   kind "ConsoleApp"
   language "C"
   targetdir "simple_build_example/build"
   objdir "simple_build_example/build/obj"

   files { "simple_build_example/main.c", "simple_build_example/utils.c" }
   includedirs { "simple_build_example/include" }

   -- Optional hooks
   prebuildcommands { "simple_build_example/scripts/pre_build.sh" }

   -- Debug settings
   filter "configurations:Default"
      symbols "On"

-- Tiny_build
workspace "TinyBuild"
   configurations { "Default" }
   location "tiny_build_example/build"

project "TinyBuild"
   kind "ConsoleApp"
   language "C"
   targetdir "tiny_build_example/build"
   objdir "tiny_build_example/build/obj"

   files { "tiny_build_example/main.c", "tiny_build_example/utils.c" }

   -- Minimal setup
   filter "configurations:Default"
      optimize "Speed"

-- Test_build
workspace "TestBuild"
   configurations { "Debug", "Release" }
   location "test_build_example/build"

project "TestBuild"
   kind "ConsoleApp"
   language "C++"
   targetdir "test_build_example/build"
   objdir "test_build_example/build/obj"

   files { "test_build_example/main.cpp", "test_build_example/utils.cpp" }
   includedirs { "test_build_example/include" }
   libdirs { "test_build_example/libs" }
   links { "m", "pthread" }

   -- Preprocessor, warnings, and profiling
   defines { "TEST_BUILD" }
   buildoptions { "-Wall", "-Werror", "-pg" }

   -- Debug and release filters
   filter "configurations:Debug"
      defines { "DEBUG" }
      symbols "On"
      optimize "Off"

   filter "configurations:Release"
      defines { "NDEBUG" }
      symbols "Off"
      optimize "Full"

   -- Custom hooks
   prebuildcommands { "test_build_example/scripts/pre_build.sh" }
   postbuildcommands { "test_build_example/scripts/post_build.sh" }


